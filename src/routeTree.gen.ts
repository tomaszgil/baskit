/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TemplatesIndexRouteImport } from './routes/templates/index'
import { Route as ListsIndexRouteImport } from './routes/lists/index'
import { Route as TemplatesCreateRouteImport } from './routes/templates/create'
import { Route as TemplatesTemplateIdRouteImport } from './routes/templates/$templateId'
import { Route as ListsCreateRouteImport } from './routes/lists/create'
import { Route as ListsListIdShopRouteImport } from './routes/lists/$listId/shop'
import { Route as ListsListIdEditRouteImport } from './routes/lists/$listId/edit'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TemplatesIndexRoute = TemplatesIndexRouteImport.update({
  id: '/templates/',
  path: '/templates/',
  getParentRoute: () => rootRouteImport,
} as any)
const ListsIndexRoute = ListsIndexRouteImport.update({
  id: '/lists/',
  path: '/lists/',
  getParentRoute: () => rootRouteImport,
} as any)
const TemplatesCreateRoute = TemplatesCreateRouteImport.update({
  id: '/templates/create',
  path: '/templates/create',
  getParentRoute: () => rootRouteImport,
} as any)
const TemplatesTemplateIdRoute = TemplatesTemplateIdRouteImport.update({
  id: '/templates/$templateId',
  path: '/templates/$templateId',
  getParentRoute: () => rootRouteImport,
} as any)
const ListsCreateRoute = ListsCreateRouteImport.update({
  id: '/lists/create',
  path: '/lists/create',
  getParentRoute: () => rootRouteImport,
} as any)
const ListsListIdShopRoute = ListsListIdShopRouteImport.update({
  id: '/lists/$listId/shop',
  path: '/lists/$listId/shop',
  getParentRoute: () => rootRouteImport,
} as any)
const ListsListIdEditRoute = ListsListIdEditRouteImport.update({
  id: '/lists/$listId/edit',
  path: '/lists/$listId/edit',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/lists/create': typeof ListsCreateRoute
  '/templates/$templateId': typeof TemplatesTemplateIdRoute
  '/templates/create': typeof TemplatesCreateRoute
  '/lists': typeof ListsIndexRoute
  '/templates': typeof TemplatesIndexRoute
  '/lists/$listId/edit': typeof ListsListIdEditRoute
  '/lists/$listId/shop': typeof ListsListIdShopRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/lists/create': typeof ListsCreateRoute
  '/templates/$templateId': typeof TemplatesTemplateIdRoute
  '/templates/create': typeof TemplatesCreateRoute
  '/lists': typeof ListsIndexRoute
  '/templates': typeof TemplatesIndexRoute
  '/lists/$listId/edit': typeof ListsListIdEditRoute
  '/lists/$listId/shop': typeof ListsListIdShopRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/lists/create': typeof ListsCreateRoute
  '/templates/$templateId': typeof TemplatesTemplateIdRoute
  '/templates/create': typeof TemplatesCreateRoute
  '/lists/': typeof ListsIndexRoute
  '/templates/': typeof TemplatesIndexRoute
  '/lists/$listId/edit': typeof ListsListIdEditRoute
  '/lists/$listId/shop': typeof ListsListIdShopRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/lists/create'
    | '/templates/$templateId'
    | '/templates/create'
    | '/lists'
    | '/templates'
    | '/lists/$listId/edit'
    | '/lists/$listId/shop'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/lists/create'
    | '/templates/$templateId'
    | '/templates/create'
    | '/lists'
    | '/templates'
    | '/lists/$listId/edit'
    | '/lists/$listId/shop'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/lists/create'
    | '/templates/$templateId'
    | '/templates/create'
    | '/lists/'
    | '/templates/'
    | '/lists/$listId/edit'
    | '/lists/$listId/shop'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  ListsCreateRoute: typeof ListsCreateRoute
  TemplatesTemplateIdRoute: typeof TemplatesTemplateIdRoute
  TemplatesCreateRoute: typeof TemplatesCreateRoute
  ListsIndexRoute: typeof ListsIndexRoute
  TemplatesIndexRoute: typeof TemplatesIndexRoute
  ListsListIdEditRoute: typeof ListsListIdEditRoute
  ListsListIdShopRoute: typeof ListsListIdShopRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/templates/': {
      id: '/templates/'
      path: '/templates'
      fullPath: '/templates'
      preLoaderRoute: typeof TemplatesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lists/': {
      id: '/lists/'
      path: '/lists'
      fullPath: '/lists'
      preLoaderRoute: typeof ListsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/templates/create': {
      id: '/templates/create'
      path: '/templates/create'
      fullPath: '/templates/create'
      preLoaderRoute: typeof TemplatesCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/templates/$templateId': {
      id: '/templates/$templateId'
      path: '/templates/$templateId'
      fullPath: '/templates/$templateId'
      preLoaderRoute: typeof TemplatesTemplateIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lists/create': {
      id: '/lists/create'
      path: '/lists/create'
      fullPath: '/lists/create'
      preLoaderRoute: typeof ListsCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lists/$listId/shop': {
      id: '/lists/$listId/shop'
      path: '/lists/$listId/shop'
      fullPath: '/lists/$listId/shop'
      preLoaderRoute: typeof ListsListIdShopRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/lists/$listId/edit': {
      id: '/lists/$listId/edit'
      path: '/lists/$listId/edit'
      fullPath: '/lists/$listId/edit'
      preLoaderRoute: typeof ListsListIdEditRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  ListsCreateRoute: ListsCreateRoute,
  TemplatesTemplateIdRoute: TemplatesTemplateIdRoute,
  TemplatesCreateRoute: TemplatesCreateRoute,
  ListsIndexRoute: ListsIndexRoute,
  TemplatesIndexRoute: TemplatesIndexRoute,
  ListsListIdEditRoute: ListsListIdEditRoute,
  ListsListIdShopRoute: ListsListIdShopRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
